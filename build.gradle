buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.6"
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'maven-publish'

repositories{
    maven { url = "http://nexus.theyeticave.net/content/repositories/pub_releases" }
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
}


version = "1.0.0"
group= "ru.redenergy"
archivesBaseName = "forge-vault"


minecraft {
    version = "1.9-12.16.0.1865-1.9"
    runDir = "eclipse"
    mappings = "snapshot_20160312"
}

configurations {
    mod
    compile.extendsFrom mod
}

dependencies {
    mod 'net.milkbowl.vault:VaultAPI:1.6'
    mod 'org.bukkit:bukkit:1.9-R0.1-SNAPSHOT'
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['mod']
    pkg {
        repo = 'maven'
        name = 'forge-vault'
        userOrg = user
        publicDownloadNumbers = true
        licenses = ["MIT"]
        vcsUrl = "https://github.com/FRedEnergy/forge-vault.git"
        //noinspection GroovyAssignabilityCheck
        version {
            name = "1.0.0-1.9"
            desc = "Vault API for Forge under 1.9 version"
            vcsTag = "1.0"
        }
    }
}

processResources{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    into('/'){
        println(findJar('VaultAPI-1.6').getClass())
        from zipTree(findJar('VaultAPI-1.6').getAsPath());
    }
}

def findJar(prefix){
    configurations.runtime.filter { it.name.startsWith(prefix) }
}

